trigger:
  - master
  - azure-pipelines

pool:
    vmImage: 'windows-latest'
steps:
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs/x86_64
        rustup-init.exe -y --default-toolchain stable
        set PATH=%PATH%;%USERPROFILE%\.cargo\bin
        echo '##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin'
        rustc -V
        cargo -V
      displayName: install rust
    - script: |
        cargo install cargo2junit
      displayName: install cargo2junit

    - script: |
        cargo test -- -Z unstable-options --format json | cargo2junit > result.xml
      displayName: test dxplr
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'result.xml'
      condition: succeededOrFailed()
      continueOnError: true

    - script: |
        cargo test --features="dxgi1_2" -- -Z unstable-options --format json | cargo2junit > result_dxgi1_2.xml
      displayName: test dxplr dxgi1_2
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'result_dxgi1_2.xml'
      condition: succeededOrFailed()
      continueOnError: true

    - script: |
        cargo test --features="dxgi1_3" -- -Z unstable-options --format json | cargo2junit > result_dxgi1_3.xml
      displayName: test dxplr dxgi1_3
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'result_dxgi1_3.xml'
      condition: succeededOrFailed()
      continueOnError: true

    - script: |
        cargo test --features="dxgi1_4" -- -Z unstable-options --format json | cargo2junit > result_dxgi1_4.xml
      displayName: test dxplr dxgi1_4
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'result_dxgi1_4.xml'
      condition: succeededOrFailed()
      continueOnError: true

    - script: |
        cargo test --features="dxgi1_5" -- -Z unstable-options --format json | cargo2junit > result_dxgi1_5.xml
      displayName: test dxplr dxgi1_5
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'result_dxgi1_5.xml'
      condition: succeededOrFailed()
      continueOnError: true

    - script: |
        cargo test --features="dxgi1_6" -- -Z unstable-options --format json | cargo2junit > result_dxgi1_6.xml
      displayName: test dxplr dxgi1_6
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'result_dxgi1_6.xml'
      condition: succeededOrFailed()
      continueOnError: true

    - script: |
        cargo test --features="d3d11_1" -- -Z unstable-options --format json | cargo2junit > result_d3d11_1.xml
      displayName: test dxplr d3d11_1
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'result_d3d11_1.xml'
      condition: succeededOrFailed()
      continueOnError: true

    - script: |
        cargo test --features="d3d11_2" -- -Z unstable-options --format json | cargo2junit > result_d3d11_2.xml
      displayName: test dxplr d3d11_2
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'result_d3d11_2.xml'
      condition: succeededOrFailed()
      continueOnError: true

    - script: |
        cargo test --features="d3d11_3" -- -Z unstable-options --format json | cargo2junit > result_d3d11_3.xml
      displayName: test dxplr d3d11_3
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'result_d3d11_3.xml'
      condition: succeededOrFailed()
      continueOnError: true

    - script: |
        cargo test --features="d3d11_4" -- -Z unstable-options --format json | cargo2junit > result_d3d11_4.xml
      displayName: test dxplr d3d11_4
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'result_d3d11_4.xml'
      condition: succeededOrFailed()
      continueOnError: true

    - script: |
        cargo test --features="d3dcompiler" -- -Z unstable-options --format json | cargo2junit > result_d3dcompiler.xml
      displayName: test dxplr d3dcompiler
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: 'result_d3dcompiler.xml'
      condition: succeededOrFailed()
      continueOnError: true
